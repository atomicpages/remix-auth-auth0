{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { OAuth2Strategy } from \"remix-auth-oauth2\";\nimport type {\n  OAuth2Profile,\n  OAuth2StrategyVerifyParams,\n  TokenResponseBody,\n} from \"remix-auth-oauth2\";\nimport type { StrategyVerifyCallback } from \"remix-auth\";\n\nexport interface Auth0StrategyOptions {\n  domain: string;\n  clientID: string;\n  clientSecret: string;\n  callbackURL: string;\n  scope?: Auth0Scope[] | string;\n  audience?: string;\n  organization?: string;\n  invitation?: string;\n  connection?: string;\n}\n\n/**\n * @see https://auth0.com/docs/get-started/apis/scopes/openid-connect-scopes#standard-claims\n */\nexport type Auth0Scope = \"openid\" | \"profile\" | \"email\" | string;\n\nexport interface Auth0Profile extends OAuth2Profile {\n  _json?: Auth0UserInfo;\n  organizationId?: string;\n  organizationName?: string;\n}\n\nexport interface Auth0ExtraParams extends Record<string, unknown> {\n  id_token?: string;\n  scope: string;\n  expires_in: number;\n  token_type: \"Bearer\";\n}\n\ninterface Auth0UserInfo {\n  sub?: string;\n  name?: string;\n  given_name?: string;\n  family_name?: string;\n  middle_name?: string;\n  nickname?: string;\n  preferred_username?: string;\n  profile?: string;\n  picture?: string;\n  website?: string;\n  email?: string;\n  email_verified?: boolean;\n  gender?: string;\n  birthdate?: string;\n  zoneinfo?: string;\n  locale?: string;\n  phone_number?: string;\n  phone_number_verified?: boolean;\n  address?: {\n    country?: string;\n  };\n  updated_at?: string;\n  org_id?: string;\n  org_name?: string;\n}\n\nexport const Auth0StrategyDefaultName = \"auth0\";\nexport const Auth0StrategyDefaultScope: Auth0Scope = \"openid profile email\";\nexport const Auth0StrategyScopeSeperator = \" \";\n\nexport class Auth0Strategy<User> extends OAuth2Strategy<\n  User,\n  Auth0Profile,\n  Auth0ExtraParams\n> {\n  name = Auth0StrategyDefaultName;\n\n  private userInfoURL: string;\n  private scope: Auth0Scope[];\n  private audience?: string;\n  private organization?: string;\n  private invitation?: string;\n  private connection?: string;\n  private fetchProfile: boolean;\n\n  constructor(\n    options: Auth0StrategyOptions,\n    verify: StrategyVerifyCallback<\n      User,\n      OAuth2StrategyVerifyParams<Auth0Profile, Auth0ExtraParams>\n    >,\n  ) {\n    super(\n      {\n        authorizationEndpoint: `https://${options.domain}/authorize`,\n        tokenEndpoint: `https://${options.domain}/oauth/token`,\n        tokenRevocationEndpoint: `https://${options.domain}/oauth/revoke`,\n        clientId: options.clientID,\n        clientSecret: options.clientSecret,\n        redirectURI: options.callbackURL,\n      },\n      verify,\n    );\n\n    this.userInfoURL = `https://${options.domain}/userinfo`;\n    this.scope = this.getScope(options.scope);\n    this.audience = options.audience;\n    this.organization = options.organization;\n    this.invitation = options.invitation;\n    this.connection = options.connection;\n    this.fetchProfile = this.scope\n      .join(Auth0StrategyScopeSeperator)\n      .includes(\"openid\");\n  }\n\n  // Allow users the option to pass a scope string, or typed array\n  private getScope(scope: Auth0StrategyOptions[\"scope\"]) {\n    if (!scope) {\n      return [Auth0StrategyDefaultScope];\n    } else if (typeof scope === \"string\") {\n      return scope.split(Auth0StrategyScopeSeperator) as Auth0Scope[];\n    }\n\n    return scope;\n  }\n\n  protected authorizationParams(params: URLSearchParams) {\n    params.set(\"scope\", this.scope.join(Auth0StrategyScopeSeperator));\n\n    if (this.audience) {\n      params.set(\"audience\", this.audience);\n    }\n\n    if (this.organization) {\n      params.set(\"organization\", this.organization);\n    }\n\n    if (this.invitation) {\n      params.set(\"invitation\", this.invitation);\n    }\n\n    if (this.connection) {\n      params.set(\"connection\", this.connection);\n    }\n\n    return params;\n  }\n\n  protected async userProfile({\n    access_token: accessToken,\n  }: TokenResponseBody): Promise<Auth0Profile> {\n    const profile: Auth0Profile = {\n      provider: Auth0StrategyDefaultName,\n    };\n\n    if (!this.fetchProfile) {\n      return profile;\n    }\n\n    const response = await fetch(this.userInfoURL, {\n      headers: { Authorization: `Bearer ${accessToken}` },\n    });\n\n    const data: Auth0UserInfo = await response.json();\n\n    profile._json = data;\n\n    if (data.sub) {\n      profile.id = data.sub;\n    }\n\n    if (data.name) {\n      profile.displayName = data.name;\n    }\n\n    if (data.family_name || data.given_name || data.middle_name) {\n      profile.name = {};\n\n      if (data.family_name) {\n        profile.name.familyName = data.family_name;\n      }\n\n      if (data.given_name) {\n        profile.name.givenName = data.given_name;\n      }\n\n      if (data.middle_name) {\n        profile.name.middleName = data.middle_name;\n      }\n    }\n\n    if (data.email) {\n      profile.emails = [{ value: data.email }];\n    }\n\n    if (data.picture) {\n      profile.photos = [{ value: data.picture }];\n    }\n\n    if (data.org_id) {\n      profile.organizationId = data.org_id;\n    }\n\n    if (data.org_name) {\n      profile.organizationName = data.org_name;\n    }\n\n    return profile;\n  }\n}\n"],"mappings":"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","names":[]}